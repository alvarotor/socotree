services:
  db:
    image: postgres:12.2-alpine
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  redis:
    image: redis:6.2.4-alpine
    command: redis-server --requirepass 321654987
    ports:
      - 6379:6379

  pgadmin:
    image: dpage/pgadmin4:5.4
    restart: unless-stopped
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 8000:80
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=50
      - PGADMIN_CONFIG_FILE_LOG_LEVEL=50
    links:
      - db
    depends_on:
      - db

  app:
    build:
      context: .
      dockerfile: ./DockerfileBackend
    restart: unless-stopped
    ports:
      - 3001:3001
    environment:
      - HOST
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - MANDRILL
      - SEGMENT
      - JWTSECRET
    links:
      - db
    depends_on:
      - db

  app_notifications:
    build:
      context: .
      dockerfile: ./DockerfileBackendNotifications
    restart: unless-stopped
    ports:
      - 8111:8111
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - MANDRILL
      - FCMKEY
      - SEGMENT
      - JWTSECRET
      - HOST
    links:
      - app
    depends_on:
      - app

  app_messages:
    build:
      context: .
      dockerfile: ./DockerfileBackendMessages
    restart: unless-stopped
    ports:
      - 8484:8484
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - FCMKEY
      - SEGMENT
      - JWTSECRET
    links:
      - db
      - app
    depends_on:
      - db
      - app

  app_admin:
    image: nginx:1.19.0-alpine
    volumes:
      - ./app-admin:/usr/share/nginx/html
    restart: unless-stopped
    ports:
      - 3000:80
    environment:
      - REACT_APP_API_HOST
      - REACT_APP_API_URL
      - REACT_APP_API_PORT
      - REACT_APP_API_PORT_MESSAGES
    links:
      - db
      - app
    depends_on:
      - db
      - app

  matching_algo:
    image: python:3.9.0-slim-buster
    restart: unless-stopped
    volumes:
      - ~/projects/socotree/matching-algorithm:/matching
    working_dir: /matching
    ports:
      - 5000:5000
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
      python3 -m pip install pip==21.0.1
      && python3 -m pip install pandas
      && python3 -m pip install psycopg2-binary
      && python3 -m pip install sqlalchemy
      && python3 -m pip install flask
      && python3 -m pip install flask_cors
      && python3 -m pip install waitress
      && python3 -m pip install numpy
      && python3 -m pip install networkx
      && python3 main.py
      "
    links:
      - db
    depends_on:
      - db

  nginx:
    image: nginx:1.19.0-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx:/etc/nginx/html
    ports:
      - 80:80
    links:
      - app
      - app_messages
      - app_notifications
      - app_admin
      - matching_algo
    depends_on:
      - app
      - app_messages
      - app_notifications
      - app_admin
      - matching_algo

volumes:
  postgres:
  pgadmin:
  nginx:
  pgbackups:
